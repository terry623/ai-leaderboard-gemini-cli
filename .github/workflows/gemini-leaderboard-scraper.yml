name: AI Leaderboard Scraper

on:
  schedule:
    - cron: '0 0 * * *' # Run daily at 8 AM
  workflow_dispatch: {} # Allow manual trigger

jobs:
  scrape-leaderboards:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      actions: write # Permission to write to action storage
    strategy:
      matrix:
        leaderboard:
          - name: "swe-bench"
            url: "https://swe-rebench.com/leaderboard"
            filename: "swe-bench-leaderboard.md"
          - name: "vellum-ai"
            url: "https://www.vellum.ai/llm-leaderboard"
            filename: "vellum-ai-leaderboard.md"
          - name: "llm-stats"
            url: "https://llm-stats.com/"
            filename: "llm-stats-leaderboard.md"
          - name: "lmarena"
            url: "https://lmarena.ai/leaderboard"
            filename: "lmarena-leaderboard.md"
          - name: "scale-ai"
            url: "https://scale.com/leaderboard"
            filename: "scale-ai-leaderboard.md"
          - name: "llm-stats"
            url: "https://llm-stats.com/"
            filename: "llm-stats-leaderboard.md"
          - name: "huggingface-open-llm"
            url: "https://huggingface.co/spaces/open-llm-leaderboard/open_llm_leaderboard"
            filename: "huggingface-open-llm-leaderboard.md"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: |
          echo "today=$(TZ='Asia/Taipei' date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"
          echo "timestamp=$(TZ='Asia/Taipei' date +'%Y-%m-%d_%H-%M-%S')" >> "$GITHUB_OUTPUT"

      - name: Run ${{ matrix.leaderboard.name }} Leaderboard Scraper
        uses: google-gemini/gemini-cli-action@main
        env:
          TODAY_DATE: ${{ steps.date.outputs.today }}
          TIMESTAMP: ${{ steps.date.outputs.timestamp }}
        with:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          settings_json: |
            {
              "coreTools": [
                "WebFetchTool",
                "WriteFileTool",
                "ShellTool"
              ]
            }
          prompt: |
            Please scrape today's leaderboard data from ${{ matrix.leaderboard.url }} and format the results into markdown format.
            
            Requirements:
            1. Scrape complete leaderboard data, including all model rankings, scores, and other information
            2. Format the data into a clear and readable markdown table format
            3. Add scraping time and data source at the beginning of the markdown
            4. Save the result as a file with filename format: ${{ matrix.leaderboard.filename }}
            5. Include scraping time and data source link with blank lines in between, using plain text only
            
            Please ensure the markdown file contains:
            - Title
            - Scraping time
            - Data source link
            - Complete leaderboard table (including ranking, model names, scores, and other fields)
            - Any important notes or explanations

      - name: Upload ${{ matrix.leaderboard.name }} leaderboard data to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.leaderboard.name }}-leaderboard-${{ steps.date.outputs.timestamp }}
          path: |
            *.md
            **/*.md
          if-no-files-found: warn
